@mixin media($minmax, $media) {
	@each $size, $resolution in $sizes {
		@if $media == $size {
			@media only screen and (#{$minmax}-width: $resolution) {
				@content;
			}
		}
	}
}

// Адаптивный шрифт
@function strip-unit($number) {
	@if type-of($number) == "number" and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

@mixin fontSize($minSize: $font-size, $maxSize: 28px, $minWidth: 320px, $maxWidth: 1200px) {
	$mxS: strip-unit($maxSize);
	$mnS: strip-unit($minSize);
	$mxW: strip-unit($maxWidth);
	$mnW: strip-unit($minWidth);

	font-size: calc(#{$minSize} + (#{$mxS} - #{$mnS}) * (100vw - #{$minWidth}) / (#{$mxW} - #{$mnW}));

	@media screen and (max-width: $minWidth) {
		font-size: $minSize;
	}

	@media screen and (min-width: $maxWidth) {
		font-size: $maxSize;
	}
}

$maxWidthSite: 1920;
$maxWidthContainerSite: 910;

@mixin adaptivpx($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainerSite + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainerSite - 320}));
		}
	} @else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainerSite + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthSite - 320}));
		}
	} @else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthSite - 320}));
	}
}

// end mixins